{
  "StepDefinitions": [
    {
      "Type": "Then",
      "Regex": "^ante libero ut$",
      "Method": "AptentNequeExErosSteps.ThenSociosquAugueAccumsanDignissim()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "ante libero ut",
      "Error": null,
      "SourceLocation": "#0|10|9|12|10"
    },
    {
      "Type": "Then",
      "Regex": "^lorem dictum (\\d+) accumsan$",
      "Method": "AptentNequeExErosSteps.ThenSedLacusPortaScelerisque(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "lorem dictum (\\d+) accumsan",
      "Error": null,
      "SourceLocation": "#0|16|9|18|10"
    },
    {
      "Type": "Then",
      "Regex": "^urna (\\d+) suscipit$",
      "Method": "AptentNequeExErosSteps.ThenEuAtConsecteturNulla(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "urna (\\d+) suscipit",
      "Error": null,
      "SourceLocation": "#0|22|9|24|10"
    },
    {
      "Type": "When",
      "Regex": "^egestas efficitur tellus$",
      "Method": "AptentNequeExErosSteps.WhenUtVenenatisLobortisAc()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "egestas efficitur tellus",
      "Error": null,
      "SourceLocation": "#0|28|9|30|10"
    },
    {
      "Type": "Then",
      "Regex": "^justo sed volutpat id \"(.*)\"$",
      "Method": "AptentNequeExErosSteps.ThenSuscipitCondimentumFermentumTorquent(String, Table)",
      "ParamTypes": "s|st",
      "Scope": null,
      "Expression": "justo sed volutpat id \"(.*)\"",
      "Error": null,
      "SourceLocation": "#0|34|9|36|10"
    },
    {
      "Type": "When",
      "Regex": "^tempus molestie ipsum massa$",
      "Method": "AptentNequeExErosSteps.WhenFusceCondimentumDiamElit()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "tempus molestie ipsum massa",
      "Error": null,
      "SourceLocation": "#0|40|9|42|10"
    },
    {
      "Type": "Given",
      "Regex": "^risus ultricies ac$",
      "Method": "MaurisEgetPerEgestasSteps.GivenTristiqueRisusUllamcorperPlacerat()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "risus ultricies ac",
      "Error": null,
      "SourceLocation": "#1|10|9|12|10"
    },
    {
      "Type": "Given",
      "Regex": "^id nulla (\\d+)$",
      "Method": "MaurisEgetPerEgestasSteps.GivenInceptosVelMassaCondimentum(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "id nulla (\\d+)",
      "Error": null,
      "SourceLocation": "#1|16|9|18|10"
    },
    {
      "Type": "When",
      "Regex": "^quis ipsum erat$",
      "Method": "MaurisEgetPerEgestasSteps.WhenIpsumOrciPellentesqueEget()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "quis ipsum erat",
      "Error": null,
      "SourceLocation": "#1|22|9|24|10"
    },
    {
      "Type": "Given",
      "Regex": "^sem per vitae$",
      "Method": "MaurisEgetPerEgestasSteps.GivenPurusNuncPretiumSit()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "sem per vitae",
      "Error": null,
      "SourceLocation": "#1|28|9|30|10"
    },
    {
      "Type": "Given",
      "Regex": "^vitae Nam Curabitur mi viverra$",
      "Method": "MaurisEgetPerEgestasSteps.GivenVestibulumFelisEuAnte()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "vitae Nam Curabitur mi viverra",
      "Error": null,
      "SourceLocation": "#1|34|9|36|10"
    },
    {
      "Type": "When",
      "Regex": "^nulla nec dui (\\d+)$",
      "Method": "MaurisEgetPerEgestasSteps.WhenPurusTacitiEtSagittis(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "nulla nec dui (\\d+)",
      "Error": null,
      "SourceLocation": "#1|40|9|42|10"
    },
    {
      "Type": "Then",
      "Regex": "^\"(.*)\" (\\d+) at (\\d+) suscipit$",
      "Method": "NequeASedMorbiSteps.ThenLobortisSuspendisseVitaeVenenatis(String, Int32, Int32)",
      "ParamTypes": "s|i|i",
      "Scope": null,
      "Expression": "\"(.*)\" (\\d+) at (\\d+) suscipit",
      "Error": null,
      "SourceLocation": "#2|10|9|12|10"
    },
    {
      "Type": "Then",
      "Regex": "^vitae suscipit Phasellus (\\d+)$",
      "Method": "NequeASedMorbiSteps.ThenMollisLoremQuisqueNostra(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "vitae suscipit Phasellus (\\d+)",
      "Error": null,
      "SourceLocation": "#2|16|9|18|10"
    },
    {
      "Type": "Then",
      "Regex": "^(\\d+) dignissim \"(.*)\"$",
      "Method": "NequeASedMorbiSteps.ThenNullaNecLeoEleifend(Int32, String)",
      "ParamTypes": "i|s",
      "Scope": null,
      "Expression": "(\\d+) dignissim \"(.*)\"",
      "Error": null,
      "SourceLocation": "#2|22|9|24|10"
    },
    {
      "Type": "Given",
      "Regex": "^massa justo lectus pretium Praesent$",
      "Method": "NequeASedMorbiSteps.GivenQuamIntegerElitAmet()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "massa justo lectus pretium Praesent",
      "Error": null,
      "SourceLocation": "#2|28|9|30|10"
    },
    {
      "Type": "When",
      "Regex": "^commodo et conubia$",
      "Method": "NequeASedMorbiSteps.WhenUtPulvinarVolutpatOdio()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "commodo et conubia",
      "Error": null,
      "SourceLocation": "#2|34|9|36|10"
    },
    {
      "Type": "Given",
      "Regex": "^nunc augue felis cursus$",
      "Method": "NequeASedMorbiSteps.GivenSuscipitDignissimInNulla(Table)",
      "ParamTypes": "st",
      "Scope": null,
      "Expression": "nunc augue felis cursus",
      "Error": null,
      "SourceLocation": "#2|40|9|42|10"
    },
    {
      "Type": "When",
      "Regex": "^est dictum Integer conubia$",
      "Method": "NuncAcNullaVenenatisSteps.WhenPharetraEtMalesuadaViverra()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "est dictum Integer conubia",
      "Error": null,
      "SourceLocation": "#3|10|9|12|10"
    },
    {
      "Type": "When",
      "Regex": "^Lorem eget leo (\\d+) Donec$",
      "Method": "NuncAcNullaVenenatisSteps.WhenVenenatisAugueCrasAliquet(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "Lorem eget leo (\\d+) Donec",
      "Error": null,
      "SourceLocation": "#3|16|9|18|10"
    },
    {
      "Type": "Then",
      "Regex": "^ante sapien nec$",
      "Method": "NuncAcNullaVenenatisSteps.ThenMolestieNecPerAliquam()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "ante sapien nec",
      "Error": null,
      "SourceLocation": "#3|22|9|24|10"
    },
    {
      "Type": "Given",
      "Regex": "^condimentum commodo nec iaculis$",
      "Method": "NuncAcNullaVenenatisSteps.GivenAtAMiVarius()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "condimentum commodo nec iaculis",
      "Error": null,
      "SourceLocation": "#3|28|9|30|10"
    },
    {
      "Type": "When",
      "Regex": "^vel sed dolor vestibulum$",
      "Method": "NuncAcNullaVenenatisSteps.WhenVehiculaScelerisqueNecVel()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "vel sed dolor vestibulum",
      "Error": null,
      "SourceLocation": "#3|34|9|36|10"
    },
    {
      "Type": "When",
      "Regex": "^in elementum \"(.*)\"$",
      "Method": "NuncAcNullaVenenatisSteps.WhenAmetAuctorVelLigula(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "in elementum \"(.*)\"",
      "Error": null,
      "SourceLocation": "#3|40|9|42|10"
    },
    {
      "Type": "Then",
      "Regex": "^tellus taciti Aliquam nunc (\\d+)$",
      "Method": "PlaceratDiamViverraAtSteps.ThenVestibulumMolestieNecIn(Int32, String)",
      "ParamTypes": "i|s",
      "Scope": null,
      "Expression": "tellus taciti Aliquam nunc (\\d+)",
      "Error": null,
      "SourceLocation": "#4|10|9|12|10"
    },
    {
      "Type": "Then",
      "Regex": "^\"(.*)\" dui a$",
      "Method": "PlaceratDiamViverraAtSteps.ThenFermentumOrciInCondimentum(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "\"(.*)\" dui a",
      "Error": null,
      "SourceLocation": "#4|16|9|18|10"
    },
    {
      "Type": "Given",
      "Regex": "^(\\d+) eros felis at lorem$",
      "Method": "PlaceratDiamViverraAtSteps.GivenLigulaPellentesqueDonecAmet(Int32, Table)",
      "ParamTypes": "i|st",
      "Scope": null,
      "Expression": "(\\d+) eros felis at lorem",
      "Error": null,
      "SourceLocation": "#4|22|9|24|10"
    },
    {
      "Type": "Given",
      "Regex": "^taciti mollis blandit egestas eu$",
      "Method": "PlaceratDiamViverraAtSteps.GivenPellentesqueInVitaeTincidunt(Table)",
      "ParamTypes": "st",
      "Scope": null,
      "Expression": "taciti mollis blandit egestas eu",
      "Error": null,
      "SourceLocation": "#4|28|9|30|10"
    },
    {
      "Type": "Given",
      "Regex": "^\"(.*)\" fermentum vulputate sagittis lobortis$",
      "Method": "PlaceratDiamViverraAtSteps.GivenNonFermentumLobortisSed(String, String)",
      "ParamTypes": "s|s",
      "Scope": null,
      "Expression": "\"(.*)\" fermentum vulputate sagittis lobortis",
      "Error": null,
      "SourceLocation": "#4|34|9|36|10"
    },
    {
      "Type": "When",
      "Regex": "^id id neque tempor dapibus$",
      "Method": "PlaceratDiamViverraAtSteps.WhenMattisTemporPulvinarSit()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "id id neque tempor dapibus",
      "Error": null,
      "SourceLocation": "#4|40|9|42|10"
    },
    {
      "Type": "Given",
      "Regex": "^felis nec Suspendisse molestie$",
      "Method": "SedEratEfficiturNonSteps.GivenUtAmetSedSuscipit()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "felis nec Suspendisse molestie",
      "Error": null,
      "SourceLocation": "#5|10|9|12|10"
    },
    {
      "Type": "Given",
      "Regex": "^orci eu augue (\\d+)$",
      "Method": "SedEratEfficiturNonSteps.GivenRisusTortorBlanditNec(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "orci eu augue (\\d+)",
      "Error": null,
      "SourceLocation": "#5|16|9|18|10"
    },
    {
      "Type": "Given",
      "Regex": "^mauris vel \"(.*)\" felis$",
      "Method": "SedEratEfficiturNonSteps.GivenSedSedUrnaEget(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "mauris vel \"(.*)\" felis",
      "Error": null,
      "SourceLocation": "#5|22|9|24|10"
    },
    {
      "Type": "Then",
      "Regex": "^(\\d+) luctus (\\d+) in$",
      "Method": "SedEratEfficiturNonSteps.ThenErosLigulaCondimentumUllamcorper(Int32, Int32)",
      "ParamTypes": "i|i",
      "Scope": null,
      "Expression": "(\\d+) luctus (\\d+) in",
      "Error": null,
      "SourceLocation": "#5|28|9|30|10"
    },
    {
      "Type": "Given",
      "Regex": "^(\\d+) \"(.*)\" conubia conubia mi$",
      "Method": "SedEratEfficiturNonSteps.GivenNecMagnaBibendumAugue(Int32, String)",
      "ParamTypes": "i|s",
      "Scope": null,
      "Expression": "(\\d+) \"(.*)\" conubia conubia mi",
      "Error": null,
      "SourceLocation": "#5|34|9|36|10"
    },
    {
      "Type": "When",
      "Regex": "^adipiscing massa molestie$",
      "Method": "SedEratEfficiturNonSteps.WhenLectusDuisSitEx()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "adipiscing massa molestie",
      "Error": null,
      "SourceLocation": "#5|40|9|42|10"
    },
    {
      "Type": "Then",
      "Regex": "^condimentum lacinia blandit$",
      "Method": "VitaeSedAuctorEtSteps.ThenLeoDuiPurusSuspendisse()",
      "ParamTypes": null,
      "Scope": null,
      "Expression": "condimentum lacinia blandit",
      "Error": null,
      "SourceLocation": "#6|10|9|12|10"
    },
    {
      "Type": "When",
      "Regex": "^per mi efficitur Nulla$",
      "Method": "VitaeSedAuctorEtSteps.WhenNuncMassaOdioAd(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "per mi efficitur Nulla",
      "Error": null,
      "SourceLocation": "#6|16|9|18|10"
    },
    {
      "Type": "Then",
      "Regex": "^Fusce \"(.*)\" sit$",
      "Method": "VitaeSedAuctorEtSteps.ThenIdLuctusBibendumSuspendisse(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "Fusce \"(.*)\" sit",
      "Error": null,
      "SourceLocation": "#6|22|9|24|10"
    },
    {
      "Type": "Then",
      "Regex": "^nec scelerisque porta (\\d+) iaculis$",
      "Method": "VitaeSedAuctorEtSteps.ThenPerInterdumMassaMollis(Int32)",
      "ParamTypes": "i",
      "Scope": null,
      "Expression": "nec scelerisque porta (\\d+) iaculis",
      "Error": null,
      "SourceLocation": "#6|28|9|30|10"
    },
    {
      "Type": "When",
      "Regex": "^\"(.*)\" sapien nec iaculis massa$",
      "Method": "VitaeSedAuctorEtSteps.WhenSemSapienSuspendisseNulla(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "\"(.*)\" sapien nec iaculis massa",
      "Error": null,
      "SourceLocation": "#6|34|9|36|10"
    },
    {
      "Type": "Given",
      "Regex": "^laoreet \"(.*)\" Quisque lobortis blandit$",
      "Method": "VitaeSedAuctorEtSteps.GivenVitaeInRisusAmet(String)",
      "ParamTypes": "s",
      "Scope": null,
      "Expression": "laoreet \"(.*)\" Quisque lobortis blandit",
      "Error": null,
      "SourceLocation": "#6|40|9|42|10"
    }
  ],
  "SourceFiles": {
    "0": "<<targetFolder>>\\StepDefinitions\\AptentNequeExErosSteps.cs",
    "1": "<<targetFolder>>\\StepDefinitions\\MaurisEgetPerEgestasSteps.cs",
    "2": "<<targetFolder>>\\StepDefinitions\\NequeASedMorbiSteps.cs",
    "3": "<<targetFolder>>\\StepDefinitions\\NuncAcNullaVenenatisSteps.cs",
    "4": "<<targetFolder>>\\StepDefinitions\\PlaceratDiamViverraAtSteps.cs",
    "5": "<<targetFolder>>\\StepDefinitions\\SedEratEfficiturNonSteps.cs",
    "6": "<<targetFolder>>\\StepDefinitions\\VitaeSedAuctorEtSteps.cs"
  },
  "TypeNames": {}
}
